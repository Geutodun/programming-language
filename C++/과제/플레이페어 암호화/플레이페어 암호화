#include <iostream>
using namespace std;

class Playfair {
	char mTable[25];
	string mPair;
	string mKey;
public:
	Playfair(string mKey, string mPair);
	void makeTable();
	void showTable();
	string makeEncryption(string mEncryption);
};

Playfair::Playfair(string mKey, string mPair) {
	this->mKey = mKey;
	this->mPair = mPair;
}

void Playfair::makeTable() {
	// mKey와 mPair를 이용하여 mTable을 만드세요. (5 X 5 로 표현하시오)
	int i, j, x = 0, y = 0;
	for (i = 0; i < mKey.length(); i++)
	{
		for (j = 0; j < 25; j++)
		{
			if (mKey[i] == mTable[j])
			{
				x = 1;
			}
			else if (mKey[i] == mPair[0])
			{
				for (int e = 0; e < 25; e++)
				{
					if (mPair[2] == mTable[e])
						x = 1;
				}
			}
			else if (mKey[i] == mPair[2])
			{
				for (int e = 0; e < 25; e++)
				{
					if (mPair[0] == mTable[e])
						x = 1;
				}
			}

		}
		if (x != 1)
		{
			mTable[y] = mKey[i];
			y++;
		}
		x = 0;
	}

	for (i = 0; i <= 25; i++)
	{
		for (j = 0; j < 25; j++)
		{
			if ((i + 97) == mTable[j])
			{
				x = 1;
			}
			else if ((i + 97) == mPair[0])
			{
				for (int e = 0; e < 25; e++)
				{
					if (mPair[2] == mTable[e])
						x = 1;
				}
			}
			else if ((i + 97) == mPair[2])
			{
				for (int e = 0; e < 25; e++)
				{
					if (mPair[0] == mTable[e])
						x = 1;
				}
			}

		}

		if (x != 1)
		{
			mTable[y] = i + 97;
			y++;
		}
		x = 0;
	}

}

void Playfair::showTable() {
	// mTable에 있는 값들을 5 X 5 로 화면에 출력하시오.
	int a = 1;
	for (int i = 0; i < 25; i++)
	{
		if (mTable[i] == mPair[0])
			cout << mPair << " ";
		else if (mTable[i] == mPair[2])
			cout << mPair << " ";
		else
			cout << mTable[i] << " ";

		if ((a % 5) == 0)
			cout << "\n";
		a++;
	}
}

string Playfair::makeEncryption(string mEncryption) {
	int a = 0;
	int g = mEncryption.length();
	if (g % 2 == 1)
		g++;
	g = g / 2;
	while (a < (g * 2))
	{
		string word = mEncryption.substr(a, 2);
		a = a + 2;

		if (word.length() < 2)
		{
			int b = 0;
			word += "x";
			int c = 0, d = 0;
			for (int i = 0; i < 25; i++)
			{
				if ((word[0] == mPair[0]) || (word[0] == mPair[2]))
				{
					if ((mTable[i] == mPair[0]) || (mTable[i] == mPair[2]))
					{
						c = i;
					}
				}
				else if (mTable[i] == word[0])
					c = i;
			}
			for (int i = 0; i < 25; i++)
			{
				if ((word[1] == mPair[0]) || (word[1] == mPair[2]))
				{
					if ((mTable[i] == mPair[0]) || (mTable[i] == mPair[2]))
					{
						d = i;
					}
				}
				else if (mTable[i] == word[1])
					d = i;
			}

			if ((c <= 4) && (d <= 4))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c <= 9) && (c >= 5)) && ((d <= 9) && (d >= 5)))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c <= 14) && (c >= 10)) && ((d <= 14) && (d >= 10)))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c <= 19) && (c >= 15)) && ((d <= 19) && (d >= 15)))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c <= 24) && (c >= 20)) && ((d <= 24) && (d >= 20)))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
		
			else if (((c % 5) - (d % 5) == 0) || ((d % 5) - (c % 5) == 0))
			{
				if (c >= 20)
				{
					c = c - 20;
					d = d + 5;
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;
				}
				else if (d >= 20)
				{
					d = d - 20;
					c = c + 5;
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;
				}
				else
				{
					d = d + 5;
					c = c + 5;
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;
				}
			}
			else
			{
				if ((c % 5) < (d % 5))
				{
					int f = c;
					c = c + (d % 5) - (c % 5);
					d = d - (f % 5 - 1);
				}
				else
				{
					int f = c;
					c = c - (c % 5) + (d % 5);
					d = d + (f % 5) - (d % 5);
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;
			}
		}


		else if ((word[0] == word[1]) || (((word[0] == mPair[0]) || (word[0] == mPair[2])) && ((word[1] == mPair[0]) || (word[1] == mPair[2]))))
		{
			int b = 0;
			while (b != 2)
			{
				string shortword = word.substr(b, 1);
				shortword += "x";
				int c = 0, d = 0;

				for (int i = 0; i < 25; i++)
				{
					if ((shortword[0] == mPair[0]) || (shortword[0] == mPair[2]))
					{
						if ((mTable[i] == mPair[0]) || (mTable[i] == mPair[2]))
						{
							c = i;
						}
					}
					else if (mTable[i] == shortword[0])
						c = i;
				}
				for (int i = 0; i < 25; i++)
				{
					if ((shortword[1] == mPair[0]) || (shortword[1] == mPair[2]))
					{
						if ((mTable[i] == mPair[0]) || (mTable[i] == mPair[2]))
						{
							d = i;
						}
					}
					else if (mTable[i] == shortword[1])
						d = i;
				}

				if ((c <= 4) && (d <= 4))
				{

					if ((c % 5) == 4)
					{
						c = c - 5 + 1;
						d++;
					}
					else if ((d % 5) == 4)
					{
						d = d - 5 + 1;
						c++;
					}
					else
					{
						c++;
						d++;
					}
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

				}
				else if (((c <= 9) && (c >= 5)) && ((d <= 9) && (d >= 5)))
				{

					if ((c % 5) == 4)
					{
						c = c - 5 + 1;
						d++;
					}
					else if ((d % 5) == 4)
					{
						d = d - 5 + 1;
						c++;
					}
					else
					{
						c++;
						d++;
					}
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

				}
				else if (((c <= 14) && (c >= 10)) && ((d <= 14) && (d >= 10)))
				{

					if ((c % 5) == 4)
					{
						c = c - 5 + 1;
						d++;
					}
					else if ((d % 5) == 4)
					{
						d = d - 5 + 1;
						c++;
					}
					else
					{
						c++;
						d++;
					}
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

				}
				else if (((c <= 19) && (c >= 15)) && ((d <= 19) && (d >= 15)))
				{

					if ((c % 5) == 4)
					{
						c = c - 5 + 1;
						d++;
					}
					else if ((d % 5) == 4)
					{
						d = d - 5 + 1;
						c++;
					}
					else
					{
						c++;
						d++;
					}
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

				}
				else if (((c <= 24) && (c >= 20)) && ((d <= 24) && (d >= 20)))
				{

					if ((c % 5) == 4)
					{
						c = c - 5 + 1;
						d++;
					}
					else if ((d % 5) == 4)
					{
						d = d - 5 + 1;
						c++;
					}
					else
					{
						c++;
						d++;
					}
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

				}
				
				else if (((c % 5) - (d % 5) == 0) || ((d % 5) - (c % 5) == 0))
				{
					if (c >= 20)
					{
						c = c - 20;
						d = d + 5;
						cout << shortword << ": " << mTable[c] << mTable[d] << "" << endl;
					}
					else if (d >= 20)
					{
						d = d - 20;
						c = c + 5;
						cout << shortword << ": " << mTable[c] << mTable[d] << "" << endl;
					}
					else
					{
						d = d + 5;
						c = c + 5;
						cout << shortword << ": " << mTable[c] << mTable[d] << "" << endl;
					}
				}
				else
				{
					if ((c % 5) < (d % 5))
					{
						int f = c;
						c = c + (d % 5) - (c % 5);
						d = d - (f % 5 - 1);
					}
					else
					{
						int f = c;
						c = c - (c % 5) + (d % 5);
						d = d + (f % 5) - (d % 5);
					}
					cout << shortword << ": " << mTable[c] << mTable[d] << "" << endl;
				}
				b++;
			}

		}

		else
		{
			int c = 0, d = 0;
			for (int i = 0; i < 25; i++)
			{
				if ((word[0] == mPair[0]) || (word[0] == mPair[2]))
				{
					if ((mTable[i] == mPair[0]) || (mTable[i] == mPair[2]))
					{
						c = i;
					}
				}
				else if (mTable[i] == word[0])
					c = i;
			}
			for (int i = 0; i < 25; i++)
			{
				if ((word[1] == mPair[0]) || (word[1] == mPair[2]))
				{
					if ((mTable[i] == mPair[0]) || (mTable[i] == mPair[2]))
					{
						d = i;
					}
				}
				else if (mTable[i] == word[1])
					d = i;
			}

			if ((c <= 4) && (d <= 4))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c <= 9) && (c >= 5)) && ((d <= 9) && (d >= 5)))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c <= 14) && (c >= 10)) && ((d <= 14) && (d >= 10)))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c <= 19) && (c >= 15)) && ((d <= 19) && (d >= 15)))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c <= 24) && (c >= 20)) && ((d <= 24) && (d >= 20)))
			{

				if ((c % 5) == 4)
				{
					c = c - 5 + 1;
					d++;
				}
				else if ((d % 5) == 4)
				{
					d = d - 5 + 1;
					c++;
				}
				else
				{
					c++;
					d++;
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;

			}
			else if (((c%5) - (d%5) == 0) || ((d%5) - (c%5) == 0))
			{
				if (c >= 20)
				{
					c = c - 20;
					d = d + 5;
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;
				}
				else if (d >= 20)
				{
					d = d - 20;
					c = c + 5;
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;
				}
				else
				{
					d = d + 5;
					c = c + 5;
					cout << word << ": " << mTable[c] << mTable[d] << "" << endl;
				}
			}
			else
			{
				if ((c % 5) < (d % 5))
				{
					int f = c;
					c = c + (d % 5) - (c % 5);
					d = d - (f % 5 - 1);
				}
				else
				{
					int f = c;
					c = c - (c % 5) + (d % 5);
					d = d + (f % 5) - (d % 5);
				}
				cout << word << ": " << mTable[c] << mTable[d] << "" << endl;
			}
		}
	}
	return NULL;
}


int main() {
	Playfair pfair("goodboy", "b/d");
	pfair.makeTable();
	pfair.showTable();
	cout << "\n\n\n" << "------------------------------------------------------------------------------------------" << endl;
	pfair.makeEncryption("ba");
}
