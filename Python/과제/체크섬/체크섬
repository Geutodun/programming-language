multinomial = input("다항식 입력 : ")  # 다항식 입력

data = input("데이터 입력 : ")  # 데이터 입력

multinomial_len = int(multinomial[1]) + 1   # 다항식 길이

multinomial_list = [0 for i in range(multinomial_len)]  # 리스트 선언

multinomial_split = multinomial.split("+")  # 다항식 '+' 기준으로 나누기

multinomial_split_len = len(multinomial_split)  # 나눈 리스트 길이
for i in range(0, multinomial_split_len):
    if(multinomial_split[i][0] == 'x'):  # x의 계수인지 판단
        multinomial_list[multinomial_len - (int(multinomial_split[i][1]) + 1)] += 1  # 다항식 자리 찾기
    else:
        multinomial_list[multinomial_len - 1] += 1


data = list(data)  # 원래 데이터를 리스트로 바꾸기

# 데이터의 끝에 생성 다항식의 길이 - 1만큼의 '0'을 추가 (패딩)
data += ['0'] * (multinomial_len - 1)

# 처음부터 끝까지 XOR 연산을 통해 나머지를 구함
for i in range(len(data) - multinomial_len + 1):
    # 첫 비트가 1인 경우에만 XOR 연산 수행
    if data[i] == '1':
        # 생성 다항식 길이만큼 XOR 연산
        for j in range(multinomial_len):
            data[i + j] = str(int(data[i + j]) ^ int(multinomial_list[j]))

# XOR 연산 후 남은 비트 전체를 출력
print(data[len(data) - (multinomial_len - 1):])
